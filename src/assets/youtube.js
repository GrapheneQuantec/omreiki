/******* Do not edit this file *******
Simple Custom CSS and JS - by Silkypress.com
Saved: Feb 26 2018 | 23:11:02 */
/* Default comment here */ 

var tag = document.createElement('script');

  tag.src = "https://www.youtube.com/iframe_api";
  var firstScriptTag = document.getElementsByTagName('script')[0];
  firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

  // 3. This function creates an <iframe> (and YouTube player)
  //    after the API code downloads.
  var symbolsPlayer, songPlayer, streamPlayer;
  
  function onYouTubeIframeAPIReady() {
    symbolsPlayer = new YT.Player('symbolsPlayer', {
      height: '630',
      width: '1120',
      videoId: 'dx-UJ-Xkr1M',
      playerVars: {
        showinfo: 0,
        rel: 0,
        end: 912
      },
      events: {
        'onStateChange': onPlayerStateChange
      }
    });
    
    songPlayer = new YT.Player('songPlayer', {
      height: '630',
      width: '1120',
      videoId: 'P94ynzOm_rE',
      allowfullscreen: 1,
      playerVars: {
        showinfo: 0,
        rel: 0
      },
      events: {
        'onStateChange': onSongPlayerStateChange
      }
    });
    
    streamPlayer = new YT.Player('streamPlayer', {
      height: '100%',
      width: '100%',
      videoId: 'eKFTSSKCzWA',
      allowfullscreen: 1,
      playerVars: {
        showinfo: 0,
        autoplay: 1,
        rel: 0,
        start: 12,
        end: 29940
      },
      events: {
        'onStateChange': onStreamPlayerStateChange
      }
    });
  }
  


  function onPlayerStateChange(event) {

    if(event.data == YT.PlayerState.ENDED){
      if(quantInterval) {
        symbolsPlayer.seekTo(0);
      }
      else {
        nextMeditationPart();
        scaledUpGrail(true);
      }
    }
  }
  
  function onSongPlayerStateChange(event) {

    if(event.data == YT.PlayerState.ENDED){
      if(quantInterval) {
        songPlayer.seekTo(0);
      }
    }
  }
  
  function onStreamPlayerStateChange(event) {

    if(event.data == YT.PlayerState.ENDED){
      if(quantInterval) {
        streamPlayer.seekTo(12);
      }
    }
  }
